function [FitRes,FitResErr] = FIT2DGauss(x_data, y_data, z_data, startPoint)
%CREATEFIT(x_data,y_data,TEST)
%  Create a fit for a 2D Gaussian:
%  'C1+(a1*exp(-(x-x0)^2/(2*sigmax^2)-(y-y0)^2/(2*sigmay^2)))'
%   
%
%
%  Data for 'untitled fit 1' fit:
%      X Input : x_data
%      Y Input : y_data
%      Z Output: test
%       Fit start points: 
%         C1: Background
%         A1
%         sigmax = Width in x
%         sigmay = Width in y
%         x0 = x center
%         y0 = y center
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 16-Sep-2013 10:28:22


%% Fit: 'untitled fit 1'.
[xData, yData, zData] = prepareSurfaceData( x_data, y_data, z_data );

% Set up fittype and options.
ft = fittype( 'C1+(a1*exp(-(x-x0)^2/(2*sigmax^2)-(y-y0)^2/(2*sigmay^2)))', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( ft );
opts.Display = 'Off';
opts.Lower = [-Inf -Inf 0 0 -Inf -Inf];
% opts.StartPoint = [C1_start A1_start sigmax_start sigmay_start x0_start y0_start];
% C1_start, A1_start, sigmax_start, sigmay_start,x0_start,y0_start
opts.StartPoint=startPoint;
opts.Upper = [Inf Inf Inf Inf Inf Inf];

% Fit model to data.
outliers=excludedata(xData,yData,'indices',zData==10);
opts.exclude=outliers;
[fitresult, gof] = fit( [xData, yData], zData, ft, opts);
[FitRes] = coeffvalues(fitresult);

% goodness of fit
FitResConf=confint(fitresult);
FitResErr=FitResConf(2,:)-FitResConf(1,:);




